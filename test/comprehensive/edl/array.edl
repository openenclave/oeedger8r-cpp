// Copyright (c) Open Enclave SDK contributors.
// Licensed under the MIT License.

enclave  {
    trusted {        
        // Test in, in-out, out, user_check attributes.
        // Also check ability to pass NULL.
        // Note: const keyword cannot be applied to arrays.
        public void ecall_array_char(
            [in] char a1[2],
            [in,out] char a2[2][2],
            [out] char a3[3][3],
            [user_check] char a4[4][4]
        );

        public void ecall_array_wchar_t(
            [in] wchar_t a1[2],
            [in,out] wchar_t a2[2][2],
            [out] wchar_t a3[3][3],
            [user_check] wchar_t a4[4][4]
        );

        public void ecall_array_short(
            [in] short a1[2],
            [in,out] short a2[2][2],
            [out] short a3[3][3],
            [user_check] short a4[4][4]
        );

        public void ecall_array_int(
            [in] int a1[2],
            [in,out] int a2[2][2],
            [out] int a3[3][3],
            [user_check] int a4[4][4]
        );

        public void ecall_array_float(
            [in] float a1[2],
            [in,out] float a2[2][2],
            [out] float a3[3][3],
            [user_check] float a4[4][4]
        );

        public void ecall_array_double(
            [in] double a1[2],
            [in,out] double a2[2][2],
            [out] double a3[3][3],
            [user_check] double a4[4][4]
        );

        public void ecall_array_long(
            [in] long a1[2],
            [in,out] long a2[2][2],
            [out] long a3[3][3],
            [user_check] long a4[4][4]
        );

        public void ecall_array_size_t(
            [in] size_t a1[2],
            [in,out] size_t a2[2][2],
            [out] size_t a3[3][3],
            [user_check] size_t a4[4][4]
        );                        

        public void ecall_array_unsigned(
            [in] unsigned a1[2],
            [in,out] unsigned a2[2][2],
            [out] unsigned a3[3][3],
            [user_check] unsigned a4[4][4]
        );
        
        public void ecall_array_int8_t(
            [in] int8_t a1[2],
            [in,out] int8_t a2[2][2],
            [out] int8_t a3[3][3],
            [user_check] int8_t a4[4][4]
        );
        
        public void ecall_array_int16_t(
            [in] int16_t a1[2],
            [in,out] int16_t a2[2][2],
            [out] int16_t a3[3][3],
            [user_check] int16_t a4[4][4]
        );

        public void ecall_array_int32_t(
            [in] int32_t a1[2],
            [in,out] int32_t a2[2][2],
            [out] int32_t a3[3][3],
            [user_check] int32_t a4[4][4]
        );

        public void ecall_array_int64_t(
            [in] int64_t a1[2],
            [in,out] int64_t a2[2][2],
            [out] int64_t a3[3][3],
            [user_check] int64_t a4[4][4]
        );

        public void ecall_array_uint8_t(
            [in] uint8_t a1[2],
            [in,out] uint8_t a2[2][2],
            [out] uint8_t a3[3][3],
            [user_check] uint8_t a4[4][4]
        );
        
        public void ecall_array_uint16_t(
            [in] uint16_t a1[2],
            [in,out] uint16_t a2[2][2],
            [out] uint16_t a3[3][3],
            [user_check] uint16_t a4[4][4]
        );

        public void ecall_array_uint32_t(
            [in] uint32_t a1[2],
            [in,out] uint32_t a2[2][2],
            [out] uint32_t a3[3][3],
            [user_check] uint32_t a4[4][4]
        );

        public void ecall_array_uint64_t(
            [in] uint64_t a1[2],
            [in,out] uint64_t a2[2][2],
            [out] uint64_t a3[3][3],
            [user_check] uint64_t a4[4][4]
        );       

        public void ecall_array_long_long(
            [in] long long a1[2],
            [in,out] long long a2[2][2],
            [out] long long a3[3][3],
            [user_check] long long a4[4][4]
        );
	
        public void ecall_array_long_double(
            [in] long double a1[2],
            [in,out] long double a2[2][2],
            [out] long double a3[3][3],
            [user_check] long double a4[4][4]
        );
	
        public void ecall_array_unsigned_char(
            [in] unsigned char a1[2],
            [in,out] unsigned char a2[2][2],
            [out] unsigned char a3[3][3],
            [user_check] unsigned char a4[4][4]
        );

        public void ecall_array_unsigned_short(
            [in] unsigned short a1[2],
            [in,out] unsigned short a2[2][2],
            [out] unsigned short a3[3][3],
            [user_check] unsigned short a4[4][4]
        );

        public void ecall_array_unsigned_int(
            [in] unsigned int a1[2],
            [in,out] unsigned int a2[2][2],
            [out] unsigned int a3[3][3],
            [user_check] unsigned int a4[4][4]
        );

        public void ecall_array_unsigned_long(
            [in] unsigned long a1[2],
            [in,out] unsigned long a2[2][2],
            [out] unsigned long a3[3][3],
            [user_check] unsigned long a4[4][4]
        );
 
        public void ecall_array_unsigned_long_long(
            [in] unsigned long long a1[2],
            [in,out] unsigned long long a2[2][2],
            [out] unsigned long long a3[3][3],
            [user_check] unsigned long long a4[4][4]
        );

        public void test_array_edl_ocalls();
        public void ecall_array_assert_all_called();
    };

    untrusted {
        // Test in, in-out, out, user_check attributes.
        // Also check ability to pass NULL.
        void ocall_array_char(
            [in] char a1[2],
            [in,out] char a2[2][2],
            [out] char a3[3][3],
            [user_check] char a4[4][4]
        );
    
        void ocall_array_wchar_t(
            [in] wchar_t a1[2],
            [in,out] wchar_t a2[2][2],
            [out] wchar_t a3[3][3],
            [user_check] wchar_t a4[4][4]
        );

        void ocall_array_short(
            [in] short a1[2],
            [in,out] short a2[2][2],
            [out] short a3[3][3],
            [user_check] short a4[4][4]
        );

        void ocall_array_int(
            [in] int a1[2],
            [in,out] int a2[2][2],
            [out] int a3[3][3],
            [user_check] int a4[4][4]
        );

        void ocall_array_float(
            [in] float a1[2],
            [in,out] float a2[2][2],
            [out] float a3[3][3],
            [user_check] float a4[4][4]
        );

        void ocall_array_double(
            [in] double a1[2],
            [in,out] double a2[2][2],
            [out] double a3[3][3],
            [user_check] double a4[4][4]
        );

        void ocall_array_long(
            [in] long a1[2],
            [in,out] long a2[2][2],
            [out] long a3[3][3],
            [user_check] long a4[4][4]
        );

        void ocall_array_size_t(
            [in] size_t a1[2],
            [in,out] size_t a2[2][2],
            [out] size_t a3[3][3],
            [user_check] size_t a4[4][4]
        );                        

        void ocall_array_unsigned(
            [in] unsigned a1[2],
            [in,out] unsigned a2[2][2],
            [out] unsigned a3[3][3],
            [user_check] unsigned a4[4][4]
        );
        
        void ocall_array_int8_t(
            [in] int8_t a1[2],
            [in,out] int8_t a2[2][2],
            [out] int8_t a3[3][3],
            [user_check] int8_t a4[4][4]
        );
        
        void ocall_array_int16_t(
            [in] int16_t a1[2],
            [in,out] int16_t a2[2][2],
            [out] int16_t a3[3][3],
            [user_check] int16_t a4[4][4]
        );

        void ocall_array_int32_t(
            [in] int32_t a1[2],
            [in,out] int32_t a2[2][2],
            [out] int32_t a3[3][3],
            [user_check] int32_t a4[4][4]
        );

        void ocall_array_int64_t(
            [in] int64_t a1[2],
            [in,out] int64_t a2[2][2],
            [out] int64_t a3[3][3],
            [user_check] int64_t a4[4][4]
        );

        void ocall_array_uint8_t(
            [in] uint8_t a1[2],
            [in,out] uint8_t a2[2][2],
            [out] uint8_t a3[3][3],
            [user_check] uint8_t a4[4][4]
        );
        
        void ocall_array_uint16_t(
            [in] uint16_t a1[2],
            [in,out] uint16_t a2[2][2],
            [out] uint16_t a3[3][3],
            [user_check] uint16_t a4[4][4]
        );

        void ocall_array_uint32_t(
            [in] uint32_t a1[2],
            [in,out] uint32_t a2[2][2],
            [out] uint32_t a3[3][3],
            [user_check] uint32_t a4[4][4]
        );

        void ocall_array_uint64_t(
            [in] uint64_t a1[2],
            [in,out] uint64_t a2[2][2],
            [out] uint64_t a3[3][3],
            [user_check] uint64_t a4[4][4]
        );         
    
        void ocall_array_long_long(
            [in] long long a1[2],
            [in,out] long long a2[2][2],
            [out] long long a3[3][3],
            [user_check] long long a4[4][4]
        );  

        void ocall_array_unsigned_char(
            [in] unsigned char a1[2],
            [in,out] unsigned char a2[2][2],
            [out] unsigned char a3[3][3],
            [user_check] unsigned char a4[4][4]
        );
	
        void ocall_array_unsigned_short(
            [in] unsigned short a1[2],
            [in,out] unsigned short a2[2][2],
            [out] unsigned short a3[3][3],
            [user_check] unsigned short a4[4][4]
        );

        void ocall_array_unsigned_int(
            [in] unsigned int a1[2],
            [in,out] unsigned int a2[2][2],
            [out] unsigned int a3[3][3],
            [user_check] unsigned int a4[4][4]
        );

        void ocall_array_unsigned_long(
            [in] unsigned long a1[2],
            [in,out] unsigned long a2[2][2],
            [out] unsigned long a3[3][3],
            [user_check] unsigned long a4[4][4]
        );

        void ocall_array_unsigned_long_long(
            [in] unsigned long long a1[2],
            [in,out] unsigned long long a2[2][2],
            [out] unsigned long long a3[3][3],
            [user_check] unsigned long long a4[4][4]
        );

        void ocall_array_long_double(
            [in] long double a1[2],
            [in,out] long double a2[2][2],
            [out] long double a3[3][3],
            [user_check] long double a4[4][4]
        );  

        void ocall_array_assert_all_called();
    };


    include "mytypes.h"
    enum my_type {
        IV_SIZE = 16
    };


    trusted {
        public void ecall_named_dims(uint8_t data1[IV_SIZE], uint8_t data2[EXT_IV_SIZE]);
    };

    untrusted {
        void ocall_named_dims(uint8_t data1[IV_SIZE], uint8_t data2[EXT_IV_SIZE]);
    };

};
